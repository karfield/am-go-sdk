// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.7
// source: ipc/sql.proto

package internal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecuteSqlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sql           string  `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	JsonArguments []byte  `protobuf:"bytes,2,opt,name=json_arguments,json=jsonArguments,proto3,oneof" json:"json_arguments,omitempty"`
	DefaultDbCode *string `protobuf:"bytes,3,opt,name=default_db_code,json=defaultDbCode,proto3,oneof" json:"default_db_code,omitempty"`
}

func (x *ExecuteSqlRequest) Reset() {
	*x = ExecuteSqlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_sql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteSqlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteSqlRequest) ProtoMessage() {}

func (x *ExecuteSqlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_sql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteSqlRequest.ProtoReflect.Descriptor instead.
func (*ExecuteSqlRequest) Descriptor() ([]byte, []int) {
	return file_ipc_sql_proto_rawDescGZIP(), []int{0}
}

func (x *ExecuteSqlRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ExecuteSqlRequest) GetJsonArguments() []byte {
	if x != nil {
		return x.JsonArguments
	}
	return nil
}

func (x *ExecuteSqlRequest) GetDefaultDbCode() string {
	if x != nil && x.DefaultDbCode != nil {
		return *x.DefaultDbCode
	}
	return ""
}

type SqlQueryColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnName string `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	ColumnType string `protobuf:"bytes,2,opt,name=column_type,json=columnType,proto3" json:"column_type,omitempty"`
}

func (x *SqlQueryColumn) Reset() {
	*x = SqlQueryColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_sql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlQueryColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlQueryColumn) ProtoMessage() {}

func (x *SqlQueryColumn) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_sql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlQueryColumn.ProtoReflect.Descriptor instead.
func (*SqlQueryColumn) Descriptor() ([]byte, []int) {
	return file_ipc_sql_proto_rawDescGZIP(), []int{1}
}

func (x *SqlQueryColumn) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *SqlQueryColumn) GetColumnType() string {
	if x != nil {
		return x.ColumnType
	}
	return ""
}

type SqlQueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns     []*SqlQueryColumn `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	JsonRecords [][]byte          `protobuf:"bytes,2,rep,name=json_records,json=jsonRecords,proto3" json:"json_records,omitempty"`
}

func (x *SqlQueryResult) Reset() {
	*x = SqlQueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_sql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlQueryResult) ProtoMessage() {}

func (x *SqlQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_sql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlQueryResult.ProtoReflect.Descriptor instead.
func (*SqlQueryResult) Descriptor() ([]byte, []int) {
	return file_ipc_sql_proto_rawDescGZIP(), []int{2}
}

func (x *SqlQueryResult) GetColumns() []*SqlQueryColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *SqlQueryResult) GetJsonRecords() [][]byte {
	if x != nil {
		return x.JsonRecords
	}
	return nil
}

type SqlExecuteResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastInsertId uint64 `protobuf:"varint,1,opt,name=last_insert_id,json=lastInsertId,proto3" json:"last_insert_id,omitempty"`
	RowsEffected uint64 `protobuf:"varint,2,opt,name=rows_effected,json=rowsEffected,proto3" json:"rows_effected,omitempty"`
}

func (x *SqlExecuteResult) Reset() {
	*x = SqlExecuteResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_sql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlExecuteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlExecuteResult) ProtoMessage() {}

func (x *SqlExecuteResult) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_sql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlExecuteResult.ProtoReflect.Descriptor instead.
func (*SqlExecuteResult) Descriptor() ([]byte, []int) {
	return file_ipc_sql_proto_rawDescGZIP(), []int{3}
}

func (x *SqlExecuteResult) GetLastInsertId() uint64 {
	if x != nil {
		return x.LastInsertId
	}
	return 0
}

func (x *SqlExecuteResult) GetRowsEffected() uint64 {
	if x != nil {
		return x.RowsEffected
	}
	return 0
}

type SqlFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *string `protobuf:"bytes,1,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SqlFailure) Reset() {
	*x = SqlFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_sql_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlFailure) ProtoMessage() {}

func (x *SqlFailure) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_sql_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlFailure.ProtoReflect.Descriptor instead.
func (*SqlFailure) Descriptor() ([]byte, []int) {
	return file_ipc_sql_proto_rawDescGZIP(), []int{4}
}

func (x *SqlFailure) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *SqlFailure) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type QuerySingleSqlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbCode *string `protobuf:"bytes,1,opt,name=db_code,json=dbCode,proto3,oneof" json:"db_code,omitempty"`
	Sql    string  `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	// Types that are assignable to Result:
	//	*QuerySingleSqlResponse_QueryResult
	//	*QuerySingleSqlResponse_Failure
	Result isQuerySingleSqlResponse_Result `protobuf_oneof:"result"`
}

func (x *QuerySingleSqlResponse) Reset() {
	*x = QuerySingleSqlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_sql_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySingleSqlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySingleSqlResponse) ProtoMessage() {}

func (x *QuerySingleSqlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_sql_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySingleSqlResponse.ProtoReflect.Descriptor instead.
func (*QuerySingleSqlResponse) Descriptor() ([]byte, []int) {
	return file_ipc_sql_proto_rawDescGZIP(), []int{5}
}

func (x *QuerySingleSqlResponse) GetDbCode() string {
	if x != nil && x.DbCode != nil {
		return *x.DbCode
	}
	return ""
}

func (x *QuerySingleSqlResponse) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (m *QuerySingleSqlResponse) GetResult() isQuerySingleSqlResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *QuerySingleSqlResponse) GetQueryResult() *SqlQueryResult {
	if x, ok := x.GetResult().(*QuerySingleSqlResponse_QueryResult); ok {
		return x.QueryResult
	}
	return nil
}

func (x *QuerySingleSqlResponse) GetFailure() *SqlFailure {
	if x, ok := x.GetResult().(*QuerySingleSqlResponse_Failure); ok {
		return x.Failure
	}
	return nil
}

type isQuerySingleSqlResponse_Result interface {
	isQuerySingleSqlResponse_Result()
}

type QuerySingleSqlResponse_QueryResult struct {
	QueryResult *SqlQueryResult `protobuf:"bytes,3,opt,name=query_result,json=queryResult,proto3,oneof"`
}

type QuerySingleSqlResponse_Failure struct {
	Failure *SqlFailure `protobuf:"bytes,4,opt,name=failure,proto3,oneof"`
}

func (*QuerySingleSqlResponse_QueryResult) isQuerySingleSqlResponse_Result() {}

func (*QuerySingleSqlResponse_Failure) isQuerySingleSqlResponse_Result() {}

type ExecuteSingleSqlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbCode *string `protobuf:"bytes,1,opt,name=db_code,json=dbCode,proto3,oneof" json:"db_code,omitempty"`
	Sql    string  `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	// Types that are assignable to Result:
	//	*ExecuteSingleSqlResponse_ExecResult
	//	*ExecuteSingleSqlResponse_Failure
	Result isExecuteSingleSqlResponse_Result `protobuf_oneof:"result"`
}

func (x *ExecuteSingleSqlResponse) Reset() {
	*x = ExecuteSingleSqlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_sql_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteSingleSqlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteSingleSqlResponse) ProtoMessage() {}

func (x *ExecuteSingleSqlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_sql_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteSingleSqlResponse.ProtoReflect.Descriptor instead.
func (*ExecuteSingleSqlResponse) Descriptor() ([]byte, []int) {
	return file_ipc_sql_proto_rawDescGZIP(), []int{6}
}

func (x *ExecuteSingleSqlResponse) GetDbCode() string {
	if x != nil && x.DbCode != nil {
		return *x.DbCode
	}
	return ""
}

func (x *ExecuteSingleSqlResponse) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (m *ExecuteSingleSqlResponse) GetResult() isExecuteSingleSqlResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ExecuteSingleSqlResponse) GetExecResult() *SqlExecuteResult {
	if x, ok := x.GetResult().(*ExecuteSingleSqlResponse_ExecResult); ok {
		return x.ExecResult
	}
	return nil
}

func (x *ExecuteSingleSqlResponse) GetFailure() *SqlFailure {
	if x, ok := x.GetResult().(*ExecuteSingleSqlResponse_Failure); ok {
		return x.Failure
	}
	return nil
}

type isExecuteSingleSqlResponse_Result interface {
	isExecuteSingleSqlResponse_Result()
}

type ExecuteSingleSqlResponse_ExecResult struct {
	ExecResult *SqlExecuteResult `protobuf:"bytes,3,opt,name=exec_result,json=execResult,proto3,oneof"`
}

type ExecuteSingleSqlResponse_Failure struct {
	Failure *SqlFailure `protobuf:"bytes,4,opt,name=failure,proto3,oneof"`
}

func (*ExecuteSingleSqlResponse_ExecResult) isExecuteSingleSqlResponse_Result() {}

func (*ExecuteSingleSqlResponse_Failure) isExecuteSingleSqlResponse_Result() {}

type SqlExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sql string `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	// Types that are assignable to Result:
	//	*SqlExecution_QueryResult
	//	*SqlExecution_ExecResult
	//	*SqlExecution_Failure
	Result isSqlExecution_Result `protobuf_oneof:"result"`
}

func (x *SqlExecution) Reset() {
	*x = SqlExecution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_sql_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlExecution) ProtoMessage() {}

func (x *SqlExecution) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_sql_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlExecution.ProtoReflect.Descriptor instead.
func (*SqlExecution) Descriptor() ([]byte, []int) {
	return file_ipc_sql_proto_rawDescGZIP(), []int{7}
}

func (x *SqlExecution) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (m *SqlExecution) GetResult() isSqlExecution_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SqlExecution) GetQueryResult() *SqlQueryResult {
	if x, ok := x.GetResult().(*SqlExecution_QueryResult); ok {
		return x.QueryResult
	}
	return nil
}

func (x *SqlExecution) GetExecResult() *SqlExecuteResult {
	if x, ok := x.GetResult().(*SqlExecution_ExecResult); ok {
		return x.ExecResult
	}
	return nil
}

func (x *SqlExecution) GetFailure() *SqlFailure {
	if x, ok := x.GetResult().(*SqlExecution_Failure); ok {
		return x.Failure
	}
	return nil
}

type isSqlExecution_Result interface {
	isSqlExecution_Result()
}

type SqlExecution_QueryResult struct {
	QueryResult *SqlQueryResult `protobuf:"bytes,10,opt,name=query_result,json=queryResult,proto3,oneof"`
}

type SqlExecution_ExecResult struct {
	ExecResult *SqlExecuteResult `protobuf:"bytes,11,opt,name=exec_result,json=execResult,proto3,oneof"`
}

type SqlExecution_Failure struct {
	Failure *SqlFailure `protobuf:"bytes,12,opt,name=failure,proto3,oneof"`
}

func (*SqlExecution_QueryResult) isSqlExecution_Result() {}

func (*SqlExecution_ExecResult) isSqlExecution_Result() {}

func (*SqlExecution_Failure) isSqlExecution_Result() {}

type ExecuteMultipleSqlsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbCode  *string         `protobuf:"bytes,1,opt,name=db_code,json=dbCode,proto3,oneof" json:"db_code,omitempty"`
	Results []*SqlExecution `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ExecuteMultipleSqlsResponse) Reset() {
	*x = ExecuteMultipleSqlsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_sql_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteMultipleSqlsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteMultipleSqlsResponse) ProtoMessage() {}

func (x *ExecuteMultipleSqlsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_sql_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteMultipleSqlsResponse.ProtoReflect.Descriptor instead.
func (*ExecuteMultipleSqlsResponse) Descriptor() ([]byte, []int) {
	return file_ipc_sql_proto_rawDescGZIP(), []int{8}
}

func (x *ExecuteMultipleSqlsResponse) GetDbCode() string {
	if x != nil && x.DbCode != nil {
		return *x.DbCode
	}
	return ""
}

func (x *ExecuteMultipleSqlsResponse) GetResults() []*SqlExecution {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_ipc_sql_proto protoreflect.FileDescriptor

var file_ipc_sql_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x69, 0x70, 0x63, 0x2f, 0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70, 0x63, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c,
	0x12, 0x2a, 0x0a, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x6a, 0x73, 0x6f, 0x6e,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x44, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x52, 0x0a, 0x0e, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x66, 0x0a, 0x0e, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70,
	0x63, 0x2e, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x5d, 0x0a, 0x10,
	0x53, 0x71, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72,
	0x6f, 0x77, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x48, 0x0a, 0x0a, 0x53,
	0x71, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x06, 0x64, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c,
	0x12, 0x3c, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70, 0x63,
	0x2e, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f,
	0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70, 0x63, 0x2e, 0x53, 0x71, 0x6c, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x42,
	0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x62,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x64, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x71, 0x6c, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70,
	0x63, 0x2e, 0x53, 0x71, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2f, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70, 0x63, 0x2e, 0x53, 0x71, 0x6c, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x64, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x0c, 0x53, 0x71, 0x6c, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12, 0x3c, 0x0a, 0x0c, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70, 0x63, 0x2e, 0x53, 0x71, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70, 0x63, 0x2e, 0x53, 0x71, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70,
	0x63, 0x2e, 0x53, 0x71, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x78, 0x0a, 0x1b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x53, 0x71, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x64, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70, 0x63, 0x2e, 0x53, 0x71, 0x6c, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x83, 0x02, 0x0a, 0x06,
	0x53, 0x71, 0x6c, 0x49, 0x70, 0x63, 0x12, 0x4d, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x71, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69,
	0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70, 0x63, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x71, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x71, 0x6c, 0x5f,
	0x69, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70, 0x63, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x71, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x13, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x53, 0x71, 0x6c, 0x73, 0x12,
	0x1a, 0x2e, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x71,
	0x6c, 0x5f, 0x69, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x53, 0x71, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ipc_sql_proto_rawDescOnce sync.Once
	file_ipc_sql_proto_rawDescData = file_ipc_sql_proto_rawDesc
)

func file_ipc_sql_proto_rawDescGZIP() []byte {
	file_ipc_sql_proto_rawDescOnce.Do(func() {
		file_ipc_sql_proto_rawDescData = protoimpl.X.CompressGZIP(file_ipc_sql_proto_rawDescData)
	})
	return file_ipc_sql_proto_rawDescData
}

var file_ipc_sql_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_ipc_sql_proto_goTypes = []interface{}{
	(*ExecuteSqlRequest)(nil),           // 0: sql_ipc.ExecuteSqlRequest
	(*SqlQueryColumn)(nil),              // 1: sql_ipc.SqlQueryColumn
	(*SqlQueryResult)(nil),              // 2: sql_ipc.SqlQueryResult
	(*SqlExecuteResult)(nil),            // 3: sql_ipc.SqlExecuteResult
	(*SqlFailure)(nil),                  // 4: sql_ipc.SqlFailure
	(*QuerySingleSqlResponse)(nil),      // 5: sql_ipc.QuerySingleSqlResponse
	(*ExecuteSingleSqlResponse)(nil),    // 6: sql_ipc.ExecuteSingleSqlResponse
	(*SqlExecution)(nil),                // 7: sql_ipc.SqlExecution
	(*ExecuteMultipleSqlsResponse)(nil), // 8: sql_ipc.ExecuteMultipleSqlsResponse
}
var file_ipc_sql_proto_depIdxs = []int32{
	1,  // 0: sql_ipc.SqlQueryResult.columns:type_name -> sql_ipc.SqlQueryColumn
	2,  // 1: sql_ipc.QuerySingleSqlResponse.query_result:type_name -> sql_ipc.SqlQueryResult
	4,  // 2: sql_ipc.QuerySingleSqlResponse.failure:type_name -> sql_ipc.SqlFailure
	3,  // 3: sql_ipc.ExecuteSingleSqlResponse.exec_result:type_name -> sql_ipc.SqlExecuteResult
	4,  // 4: sql_ipc.ExecuteSingleSqlResponse.failure:type_name -> sql_ipc.SqlFailure
	2,  // 5: sql_ipc.SqlExecution.query_result:type_name -> sql_ipc.SqlQueryResult
	3,  // 6: sql_ipc.SqlExecution.exec_result:type_name -> sql_ipc.SqlExecuteResult
	4,  // 7: sql_ipc.SqlExecution.failure:type_name -> sql_ipc.SqlFailure
	7,  // 8: sql_ipc.ExecuteMultipleSqlsResponse.results:type_name -> sql_ipc.SqlExecution
	0,  // 9: sql_ipc.SqlIpc.QuerySingleSql:input_type -> sql_ipc.ExecuteSqlRequest
	0,  // 10: sql_ipc.SqlIpc.ExecuteSingleSql:input_type -> sql_ipc.ExecuteSqlRequest
	0,  // 11: sql_ipc.SqlIpc.ExecuteMultipleSqls:input_type -> sql_ipc.ExecuteSqlRequest
	5,  // 12: sql_ipc.SqlIpc.QuerySingleSql:output_type -> sql_ipc.QuerySingleSqlResponse
	6,  // 13: sql_ipc.SqlIpc.ExecuteSingleSql:output_type -> sql_ipc.ExecuteSingleSqlResponse
	8,  // 14: sql_ipc.SqlIpc.ExecuteMultipleSqls:output_type -> sql_ipc.ExecuteMultipleSqlsResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_ipc_sql_proto_init() }
func file_ipc_sql_proto_init() {
	if File_ipc_sql_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ipc_sql_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteSqlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_sql_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlQueryColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_sql_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlQueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_sql_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlExecuteResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_sql_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_sql_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySingleSqlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_sql_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteSingleSqlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_sql_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlExecution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_sql_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteMultipleSqlsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ipc_sql_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_ipc_sql_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_ipc_sql_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*QuerySingleSqlResponse_QueryResult)(nil),
		(*QuerySingleSqlResponse_Failure)(nil),
	}
	file_ipc_sql_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ExecuteSingleSqlResponse_ExecResult)(nil),
		(*ExecuteSingleSqlResponse_Failure)(nil),
	}
	file_ipc_sql_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SqlExecution_QueryResult)(nil),
		(*SqlExecution_ExecResult)(nil),
		(*SqlExecution_Failure)(nil),
	}
	file_ipc_sql_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ipc_sql_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ipc_sql_proto_goTypes,
		DependencyIndexes: file_ipc_sql_proto_depIdxs,
		MessageInfos:      file_ipc_sql_proto_msgTypes,
	}.Build()
	File_ipc_sql_proto = out.File
	file_ipc_sql_proto_rawDesc = nil
	file_ipc_sql_proto_goTypes = nil
	file_ipc_sql_proto_depIdxs = nil
}
