// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.7
// source: schema/schema.proto

package internal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SchemaFieldType int32

const (
	SchemaFieldType_Bytes    SchemaFieldType = 0
	SchemaFieldType_String   SchemaFieldType = 1
	SchemaFieldType_Bool     SchemaFieldType = 2
	SchemaFieldType_Int      SchemaFieldType = 3
	SchemaFieldType_Uint     SchemaFieldType = 4
	SchemaFieldType_Float    SchemaFieldType = 5
	SchemaFieldType_Double   SchemaFieldType = 6
	SchemaFieldType_DateTime SchemaFieldType = 7
	SchemaFieldType_Object   SchemaFieldType = 8
)

// Enum value maps for SchemaFieldType.
var (
	SchemaFieldType_name = map[int32]string{
		0: "Bytes",
		1: "String",
		2: "Bool",
		3: "Int",
		4: "Uint",
		5: "Float",
		6: "Double",
		7: "DateTime",
		8: "Object",
	}
	SchemaFieldType_value = map[string]int32{
		"Bytes":    0,
		"String":   1,
		"Bool":     2,
		"Int":      3,
		"Uint":     4,
		"Float":    5,
		"Double":   6,
		"DateTime": 7,
		"Object":   8,
	}
)

func (x SchemaFieldType) Enum() *SchemaFieldType {
	p := new(SchemaFieldType)
	*p = x
	return p
}

func (x SchemaFieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchemaFieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_schema_proto_enumTypes[0].Descriptor()
}

func (SchemaFieldType) Type() protoreflect.EnumType {
	return &file_schema_schema_proto_enumTypes[0]
}

func (x SchemaFieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchemaFieldType.Descriptor instead.
func (SchemaFieldType) EnumDescriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{0}
}

type StringValidationType int32

const (
	StringValidationType_Regex StringValidationType = 0
	StringValidationType_Url   StringValidationType = 1
	StringValidationType_Ip    StringValidationType = 2
	StringValidationType_Ipv4  StringValidationType = 3
	StringValidationType_Ipv6  StringValidationType = 4
	StringValidationType_Uuid  StringValidationType = 5
	StringValidationType_Email StringValidationType = 6
)

// Enum value maps for StringValidationType.
var (
	StringValidationType_name = map[int32]string{
		0: "Regex",
		1: "Url",
		2: "Ip",
		3: "Ipv4",
		4: "Ipv6",
		5: "Uuid",
		6: "Email",
	}
	StringValidationType_value = map[string]int32{
		"Regex": 0,
		"Url":   1,
		"Ip":    2,
		"Ipv4":  3,
		"Ipv6":  4,
		"Uuid":  5,
		"Email": 6,
	}
)

func (x StringValidationType) Enum() *StringValidationType {
	p := new(StringValidationType)
	*p = x
	return p
}

func (x StringValidationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StringValidationType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_schema_proto_enumTypes[1].Descriptor()
}

func (StringValidationType) Type() protoreflect.EnumType {
	return &file_schema_schema_proto_enumTypes[1]
}

func (x StringValidationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StringValidationType.Descriptor instead.
func (StringValidationType) EnumDescriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{1}
}

type BytesFieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Array        bool     `protobuf:"varint,2,opt,name=array,proto3" json:"array,omitempty"`
	Required     bool     `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	DefaultValue [][]byte `protobuf:"bytes,4,rep,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	DisplayName  string   `protobuf:"bytes,10,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description  *string  `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *BytesFieldSchema) Reset() {
	*x = BytesFieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesFieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesFieldSchema) ProtoMessage() {}

func (x *BytesFieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesFieldSchema.ProtoReflect.Descriptor instead.
func (*BytesFieldSchema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{0}
}

func (x *BytesFieldSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BytesFieldSchema) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *BytesFieldSchema) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *BytesFieldSchema) GetDefaultValue() [][]byte {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *BytesFieldSchema) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *BytesFieldSchema) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type StringFieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Array        bool                  `protobuf:"varint,2,opt,name=array,proto3" json:"array,omitempty"`
	Required     bool                  `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	DefaultValue []string              `protobuf:"bytes,4,rep,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	ValidateType *StringValidationType `protobuf:"varint,6,opt,name=validate_type,json=validateType,proto3,enum=schema.StringValidationType,oneof" json:"validate_type,omitempty"`
	Regexpr      *string               `protobuf:"bytes,5,opt,name=regexpr,proto3,oneof" json:"regexpr,omitempty"`
	DisplayName  string                `protobuf:"bytes,10,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description  *string               `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *StringFieldSchema) Reset() {
	*x = StringFieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringFieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringFieldSchema) ProtoMessage() {}

func (x *StringFieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringFieldSchema.ProtoReflect.Descriptor instead.
func (*StringFieldSchema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{1}
}

func (x *StringFieldSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StringFieldSchema) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *StringFieldSchema) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *StringFieldSchema) GetDefaultValue() []string {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *StringFieldSchema) GetValidateType() StringValidationType {
	if x != nil && x.ValidateType != nil {
		return *x.ValidateType
	}
	return StringValidationType_Regex
}

func (x *StringFieldSchema) GetRegexpr() string {
	if x != nil && x.Regexpr != nil {
		return *x.Regexpr
	}
	return ""
}

func (x *StringFieldSchema) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *StringFieldSchema) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type BoolFieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Array        bool    `protobuf:"varint,2,opt,name=array,proto3" json:"array,omitempty"`
	Required     bool    `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	DefaultValue []bool  `protobuf:"varint,4,rep,packed,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	DisplayName  string  `protobuf:"bytes,10,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description  *string `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *BoolFieldSchema) Reset() {
	*x = BoolFieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolFieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolFieldSchema) ProtoMessage() {}

func (x *BoolFieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolFieldSchema.ProtoReflect.Descriptor instead.
func (*BoolFieldSchema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{2}
}

func (x *BoolFieldSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BoolFieldSchema) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *BoolFieldSchema) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *BoolFieldSchema) GetDefaultValue() []bool {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *BoolFieldSchema) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *BoolFieldSchema) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type IntFieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Array        bool    `protobuf:"varint,2,opt,name=array,proto3" json:"array,omitempty"`
	Required     bool    `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	DefaultValue []int64 `protobuf:"varint,4,rep,packed,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	MinValue     *int64  `protobuf:"varint,5,opt,name=min_value,json=minValue,proto3,oneof" json:"min_value,omitempty"`
	MaxValue     *int64  `protobuf:"varint,6,opt,name=max_value,json=maxValue,proto3,oneof" json:"max_value,omitempty"`
	DisplayName  string  `protobuf:"bytes,10,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description  *string `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *IntFieldSchema) Reset() {
	*x = IntFieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntFieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntFieldSchema) ProtoMessage() {}

func (x *IntFieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntFieldSchema.ProtoReflect.Descriptor instead.
func (*IntFieldSchema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{3}
}

func (x *IntFieldSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IntFieldSchema) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *IntFieldSchema) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *IntFieldSchema) GetDefaultValue() []int64 {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *IntFieldSchema) GetMinValue() int64 {
	if x != nil && x.MinValue != nil {
		return *x.MinValue
	}
	return 0
}

func (x *IntFieldSchema) GetMaxValue() int64 {
	if x != nil && x.MaxValue != nil {
		return *x.MaxValue
	}
	return 0
}

func (x *IntFieldSchema) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *IntFieldSchema) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type UintFieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Array        bool     `protobuf:"varint,2,opt,name=array,proto3" json:"array,omitempty"`
	Required     bool     `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	DefaultValue []uint64 `protobuf:"varint,4,rep,packed,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	MinValue     *uint64  `protobuf:"varint,5,opt,name=min_value,json=minValue,proto3,oneof" json:"min_value,omitempty"`
	MaxValue     *uint64  `protobuf:"varint,6,opt,name=max_value,json=maxValue,proto3,oneof" json:"max_value,omitempty"`
	DisplayName  string   `protobuf:"bytes,10,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description  *string  `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *UintFieldSchema) Reset() {
	*x = UintFieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UintFieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UintFieldSchema) ProtoMessage() {}

func (x *UintFieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UintFieldSchema.ProtoReflect.Descriptor instead.
func (*UintFieldSchema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{4}
}

func (x *UintFieldSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UintFieldSchema) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *UintFieldSchema) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *UintFieldSchema) GetDefaultValue() []uint64 {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *UintFieldSchema) GetMinValue() uint64 {
	if x != nil && x.MinValue != nil {
		return *x.MinValue
	}
	return 0
}

func (x *UintFieldSchema) GetMaxValue() uint64 {
	if x != nil && x.MaxValue != nil {
		return *x.MaxValue
	}
	return 0
}

func (x *UintFieldSchema) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UintFieldSchema) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type FloatFieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Array        bool      `protobuf:"varint,2,opt,name=array,proto3" json:"array,omitempty"`
	Required     bool      `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	DefaultValue []float64 `protobuf:"fixed64,4,rep,packed,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	MinValue     *float64  `protobuf:"fixed64,5,opt,name=min_value,json=minValue,proto3,oneof" json:"min_value,omitempty"`
	MaxValue     *float64  `protobuf:"fixed64,6,opt,name=max_value,json=maxValue,proto3,oneof" json:"max_value,omitempty"`
	DisplayName  string    `protobuf:"bytes,10,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description  *string   `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *FloatFieldSchema) Reset() {
	*x = FloatFieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatFieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatFieldSchema) ProtoMessage() {}

func (x *FloatFieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatFieldSchema.ProtoReflect.Descriptor instead.
func (*FloatFieldSchema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{5}
}

func (x *FloatFieldSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FloatFieldSchema) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *FloatFieldSchema) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *FloatFieldSchema) GetDefaultValue() []float64 {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *FloatFieldSchema) GetMinValue() float64 {
	if x != nil && x.MinValue != nil {
		return *x.MinValue
	}
	return 0
}

func (x *FloatFieldSchema) GetMaxValue() float64 {
	if x != nil && x.MaxValue != nil {
		return *x.MaxValue
	}
	return 0
}

func (x *FloatFieldSchema) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *FloatFieldSchema) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type DoubleFieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Array        bool      `protobuf:"varint,2,opt,name=array,proto3" json:"array,omitempty"`
	Required     bool      `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	DefaultValue []float64 `protobuf:"fixed64,4,rep,packed,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	MinValue     *float64  `protobuf:"fixed64,5,opt,name=min_value,json=minValue,proto3,oneof" json:"min_value,omitempty"`
	MaxValue     *float64  `protobuf:"fixed64,6,opt,name=max_value,json=maxValue,proto3,oneof" json:"max_value,omitempty"`
	DisplayName  string    `protobuf:"bytes,10,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description  *string   `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *DoubleFieldSchema) Reset() {
	*x = DoubleFieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleFieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleFieldSchema) ProtoMessage() {}

func (x *DoubleFieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleFieldSchema.ProtoReflect.Descriptor instead.
func (*DoubleFieldSchema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{6}
}

func (x *DoubleFieldSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DoubleFieldSchema) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *DoubleFieldSchema) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *DoubleFieldSchema) GetDefaultValue() []float64 {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *DoubleFieldSchema) GetMinValue() float64 {
	if x != nil && x.MinValue != nil {
		return *x.MinValue
	}
	return 0
}

func (x *DoubleFieldSchema) GetMaxValue() float64 {
	if x != nil && x.MaxValue != nil {
		return *x.MaxValue
	}
	return 0
}

func (x *DoubleFieldSchema) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *DoubleFieldSchema) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type DateFieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Array       bool    `protobuf:"varint,2,opt,name=array,proto3" json:"array,omitempty"`
	Required    bool    `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	Format      *string `protobuf:"bytes,4,opt,name=format,proto3,oneof" json:"format,omitempty"`
	DisplayName string  `protobuf:"bytes,10,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description *string `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *DateFieldSchema) Reset() {
	*x = DateFieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateFieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateFieldSchema) ProtoMessage() {}

func (x *DateFieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateFieldSchema.ProtoReflect.Descriptor instead.
func (*DateFieldSchema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{7}
}

func (x *DateFieldSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DateFieldSchema) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *DateFieldSchema) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *DateFieldSchema) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *DateFieldSchema) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *DateFieldSchema) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type ObjectFieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Array       bool           `protobuf:"varint,2,opt,name=array,proto3" json:"array,omitempty"`
	Required    bool           `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	Children    []*FieldSchema `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
	DisplayName string         `protobuf:"bytes,10,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description *string        `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *ObjectFieldSchema) Reset() {
	*x = ObjectFieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectFieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectFieldSchema) ProtoMessage() {}

func (x *ObjectFieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectFieldSchema.ProtoReflect.Descriptor instead.
func (*ObjectFieldSchema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{8}
}

func (x *ObjectFieldSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectFieldSchema) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *ObjectFieldSchema) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ObjectFieldSchema) GetChildren() []*FieldSchema {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *ObjectFieldSchema) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ObjectFieldSchema) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type FieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Field:
	//	*FieldSchema_BytesField
	//	*FieldSchema_StringField
	//	*FieldSchema_BoolField
	//	*FieldSchema_IntField
	//	*FieldSchema_UintField
	//	*FieldSchema_FloatField
	//	*FieldSchema_DoubleField
	//	*FieldSchema_DateField
	//	*FieldSchema_ObjectField
	Field isFieldSchema_Field `protobuf_oneof:"field"`
}

func (x *FieldSchema) Reset() {
	*x = FieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldSchema) ProtoMessage() {}

func (x *FieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldSchema.ProtoReflect.Descriptor instead.
func (*FieldSchema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{9}
}

func (m *FieldSchema) GetField() isFieldSchema_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (x *FieldSchema) GetBytesField() *BytesFieldSchema {
	if x, ok := x.GetField().(*FieldSchema_BytesField); ok {
		return x.BytesField
	}
	return nil
}

func (x *FieldSchema) GetStringField() *StringFieldSchema {
	if x, ok := x.GetField().(*FieldSchema_StringField); ok {
		return x.StringField
	}
	return nil
}

func (x *FieldSchema) GetBoolField() *BoolFieldSchema {
	if x, ok := x.GetField().(*FieldSchema_BoolField); ok {
		return x.BoolField
	}
	return nil
}

func (x *FieldSchema) GetIntField() *IntFieldSchema {
	if x, ok := x.GetField().(*FieldSchema_IntField); ok {
		return x.IntField
	}
	return nil
}

func (x *FieldSchema) GetUintField() *UintFieldSchema {
	if x, ok := x.GetField().(*FieldSchema_UintField); ok {
		return x.UintField
	}
	return nil
}

func (x *FieldSchema) GetFloatField() *FloatFieldSchema {
	if x, ok := x.GetField().(*FieldSchema_FloatField); ok {
		return x.FloatField
	}
	return nil
}

func (x *FieldSchema) GetDoubleField() *DoubleFieldSchema {
	if x, ok := x.GetField().(*FieldSchema_DoubleField); ok {
		return x.DoubleField
	}
	return nil
}

func (x *FieldSchema) GetDateField() *DateFieldSchema {
	if x, ok := x.GetField().(*FieldSchema_DateField); ok {
		return x.DateField
	}
	return nil
}

func (x *FieldSchema) GetObjectField() *ObjectFieldSchema {
	if x, ok := x.GetField().(*FieldSchema_ObjectField); ok {
		return x.ObjectField
	}
	return nil
}

type isFieldSchema_Field interface {
	isFieldSchema_Field()
}

type FieldSchema_BytesField struct {
	BytesField *BytesFieldSchema `protobuf:"bytes,1,opt,name=bytes_field,json=bytesField,proto3,oneof"`
}

type FieldSchema_StringField struct {
	StringField *StringFieldSchema `protobuf:"bytes,2,opt,name=string_field,json=stringField,proto3,oneof"`
}

type FieldSchema_BoolField struct {
	BoolField *BoolFieldSchema `protobuf:"bytes,3,opt,name=bool_field,json=boolField,proto3,oneof"`
}

type FieldSchema_IntField struct {
	IntField *IntFieldSchema `protobuf:"bytes,4,opt,name=int_field,json=intField,proto3,oneof"`
}

type FieldSchema_UintField struct {
	UintField *UintFieldSchema `protobuf:"bytes,5,opt,name=uint_field,json=uintField,proto3,oneof"`
}

type FieldSchema_FloatField struct {
	FloatField *FloatFieldSchema `protobuf:"bytes,6,opt,name=float_field,json=floatField,proto3,oneof"`
}

type FieldSchema_DoubleField struct {
	DoubleField *DoubleFieldSchema `protobuf:"bytes,7,opt,name=double_field,json=doubleField,proto3,oneof"`
}

type FieldSchema_DateField struct {
	DateField *DateFieldSchema `protobuf:"bytes,8,opt,name=date_field,json=dateField,proto3,oneof"`
}

type FieldSchema_ObjectField struct {
	ObjectField *ObjectFieldSchema `protobuf:"bytes,9,opt,name=object_field,json=objectField,proto3,oneof"`
}

func (*FieldSchema_BytesField) isFieldSchema_Field() {}

func (*FieldSchema_StringField) isFieldSchema_Field() {}

func (*FieldSchema_BoolField) isFieldSchema_Field() {}

func (*FieldSchema_IntField) isFieldSchema_Field() {}

func (*FieldSchema_UintField) isFieldSchema_Field() {}

func (*FieldSchema_FloatField) isFieldSchema_Field() {}

func (*FieldSchema_DoubleField) isFieldSchema_Field() {}

func (*FieldSchema_DateField) isFieldSchema_Field() {}

func (*FieldSchema_ObjectField) isFieldSchema_Field() {}

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Array     bool           `protobuf:"varint,1,opt,name=array,proto3" json:"array,omitempty"`
	Signature string         `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Fields    []*FieldSchema `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_schema_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_schema_schema_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_schema_schema_proto_rawDescGZIP(), []int{10}
}

func (x *Schema) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *Schema) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Schema) GetFields() []*FieldSchema {
	if x != nil {
		return x.Fields
	}
	return nil
}

var File_schema_schema_proto protoreflect.FileDescriptor

var file_schema_schema_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0xd7, 0x01,
	0x0a, 0x10, 0x42, 0x79, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdd, 0x02, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x07, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd6, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6c,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xb5, 0x02, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x02, 0x0a, 0x0f, 0x55, 0x69, 0x6e,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x61, 0x78,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xb7, 0x02, 0x0a, 0x10, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72,
	0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb8, 0x02, 0x0a, 0x11,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x09,
	0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d,
	0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd9, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x1b, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xe4, 0x01, 0x0a, 0x11, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2f,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb5, 0x04, 0x0a, 0x0b, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3b, 0x0a, 0x0b, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x35, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x09, 0x75, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3e,
	0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x38,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x22, 0x69, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x2b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2a, 0x76, 0x0a, 0x0f,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x10, 0x02,
	0x12, 0x07, 0x0a, 0x03, 0x49, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x69, 0x6e,
	0x74, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x10, 0x05, 0x12, 0x0a,
	0x0a, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x10, 0x08, 0x2a, 0x5b, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x52, 0x65, 0x67, 0x65, 0x78, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x10, 0x01,
	0x12, 0x06, 0x0a, 0x02, 0x49, 0x70, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x70, 0x76, 0x34,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x70, 0x76, 0x36, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x55, 0x75, 0x69, 0x64, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x10,
	0x06, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schema_schema_proto_rawDescOnce sync.Once
	file_schema_schema_proto_rawDescData = file_schema_schema_proto_rawDesc
)

func file_schema_schema_proto_rawDescGZIP() []byte {
	file_schema_schema_proto_rawDescOnce.Do(func() {
		file_schema_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_schema_proto_rawDescData)
	})
	return file_schema_schema_proto_rawDescData
}

var file_schema_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_schema_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_schema_schema_proto_goTypes = []interface{}{
	(SchemaFieldType)(0),      // 0: schema.SchemaFieldType
	(StringValidationType)(0), // 1: schema.StringValidationType
	(*BytesFieldSchema)(nil),  // 2: schema.BytesFieldSchema
	(*StringFieldSchema)(nil), // 3: schema.StringFieldSchema
	(*BoolFieldSchema)(nil),   // 4: schema.BoolFieldSchema
	(*IntFieldSchema)(nil),    // 5: schema.IntFieldSchema
	(*UintFieldSchema)(nil),   // 6: schema.UintFieldSchema
	(*FloatFieldSchema)(nil),  // 7: schema.FloatFieldSchema
	(*DoubleFieldSchema)(nil), // 8: schema.DoubleFieldSchema
	(*DateFieldSchema)(nil),   // 9: schema.DateFieldSchema
	(*ObjectFieldSchema)(nil), // 10: schema.ObjectFieldSchema
	(*FieldSchema)(nil),       // 11: schema.FieldSchema
	(*Schema)(nil),            // 12: schema.Schema
}
var file_schema_schema_proto_depIdxs = []int32{
	1,  // 0: schema.StringFieldSchema.validate_type:type_name -> schema.StringValidationType
	11, // 1: schema.ObjectFieldSchema.children:type_name -> schema.FieldSchema
	2,  // 2: schema.FieldSchema.bytes_field:type_name -> schema.BytesFieldSchema
	3,  // 3: schema.FieldSchema.string_field:type_name -> schema.StringFieldSchema
	4,  // 4: schema.FieldSchema.bool_field:type_name -> schema.BoolFieldSchema
	5,  // 5: schema.FieldSchema.int_field:type_name -> schema.IntFieldSchema
	6,  // 6: schema.FieldSchema.uint_field:type_name -> schema.UintFieldSchema
	7,  // 7: schema.FieldSchema.float_field:type_name -> schema.FloatFieldSchema
	8,  // 8: schema.FieldSchema.double_field:type_name -> schema.DoubleFieldSchema
	9,  // 9: schema.FieldSchema.date_field:type_name -> schema.DateFieldSchema
	10, // 10: schema.FieldSchema.object_field:type_name -> schema.ObjectFieldSchema
	11, // 11: schema.Schema.fields:type_name -> schema.FieldSchema
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_schema_schema_proto_init() }
func file_schema_schema_proto_init() {
	if File_schema_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schema_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesFieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringFieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolFieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntFieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UintFieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatFieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubleFieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_schema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateFieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_schema_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectFieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_schema_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_schema_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_schema_schema_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_schema_schema_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_schema_schema_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_schema_schema_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_schema_schema_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_schema_schema_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_schema_schema_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_schema_schema_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_schema_schema_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_schema_schema_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*FieldSchema_BytesField)(nil),
		(*FieldSchema_StringField)(nil),
		(*FieldSchema_BoolField)(nil),
		(*FieldSchema_IntField)(nil),
		(*FieldSchema_UintField)(nil),
		(*FieldSchema_FloatField)(nil),
		(*FieldSchema_DoubleField)(nil),
		(*FieldSchema_DateField)(nil),
		(*FieldSchema_ObjectField)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_schema_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_schema_proto_goTypes,
		DependencyIndexes: file_schema_schema_proto_depIdxs,
		EnumInfos:         file_schema_schema_proto_enumTypes,
		MessageInfos:      file_schema_schema_proto_msgTypes,
	}.Build()
	File_schema_schema_proto = out.File
	file_schema_schema_proto_rawDesc = nil
	file_schema_schema_proto_goTypes = nil
	file_schema_schema_proto_depIdxs = nil
}
